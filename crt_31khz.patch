Subject: [PATCH] Patches to run on a 31khz CRT. Adds a new boolean "interlaced". If true resolutions are doubled and interlaced modes are never used

---
 gfx/display_servers/dispserv_x11.c | 15 ++++++++-------
 gfx/video_crt_switch.c             | 14 ++++++++++++++
 retroarch.cfg                      | 10 ++++++++++
 3 files changed, 32 insertions(+), 7 deletions(-)

diff --git a/gfx/display_servers/dispserv_x11.c b/gfx/display_servers/dispserv_x11.c
index 7fbfc1510c..03b6a28033 100644
--- a/gfx/display_servers/dispserv_x11.c
+++ b/gfx/display_servers/dispserv_x11.c
@@ -43,6 +43,7 @@
 static char xrandr[1024]        = {0};
 static char crt_name[16]        = {0};
 static int crt_name_id          = 0;
+static bool interlaced          = false;
 static bool crt_en              = false;
 static unsigned crt_id          = 20;
 static char orig_output[256]    = {0};
@@ -102,7 +103,7 @@ static void x11_display_server_destroy(void *data)
    dispserv_x11_t *dispserv = (dispserv_x11_t*)data;
 
 #ifdef HAVE_XRANDR
-   if (crt_en)
+   if (crt_en && interlaced)
    {
       snprintf(xrandr, sizeof(xrandr),
             "xrandr --newmode 700x480_59.94 13.849698 700 742 801 867 480 490 496 533 interlace -hsync -vsync");
@@ -239,21 +240,21 @@ static bool x11_display_server_set_resolution(void *data,
 
    vfp = height + ((vmax - height) / 2) - pdefault;
 
-   if (height < 300)
+   if (!interlaced)
       vsp = vfp + 3; /* needs to be 3 for progressive */
-   if (height > 300)
+   if (height > 300 && interlaced)
       vsp = vfp + 6; /* needs to be 6 for interlaced */
 
    vbp = vmax;
 
-   if (height < 300)
+   if (!interlaced)
       pixel_clock = (hmax * vmax * hz) / 1000000;
-   if (height > 300)
+   if (height > 300 && interlaced)
       pixel_clock = ((hmax * vmax * hz) / 1000000) / 2;
    /* above code is the modeline generator */
 
    /* create interlaced newmode from modline variables */
-   if (height < 300)
+   if (!interlaced)
    {
       snprintf(xrandr, sizeof(xrandr),
             "xrandr --newmode \"%s_%dx%d_%0.2f\" %f %d %d %d %d %d %d %d %d -hsync -vsync",
@@ -262,7 +263,7 @@ static bool x11_display_server_set_resolution(void *data,
    }
 
    /* create interlaced newmode from modline variables */
-   if (height > 300)
+   if (height > 300 && interlaced)
    {
       snprintf(xrandr, sizeof(xrandr),
             "xrandr --newmode \"%s_%dx%d_%0.2f\" %f %d %d %d %d %d %d %d %d interlace -hsync -vsync",
diff --git a/gfx/video_crt_switch.c b/gfx/video_crt_switch.c
index 5e1352b424..0c5594d98d 100644
--- a/gfx/video_crt_switch.c
+++ b/gfx/video_crt_switch.c
@@ -201,6 +201,20 @@ void crt_switch_res_core(unsigned width, unsigned height,
       float hz, unsigned crt_mode,
       int crt_switch_center_adjust, int monitor_index, bool dynamic)
 {
+
+   static bool interlaced = false;
+
+   if (!interlaced && height < 448)
+   {
+      height = height * 2;
+      width = width * 2;
+   }
+
+   if (!interlaced && height >= 448 && width <=320)
+   {
+      width = width * 2;
+   }
+
    videocrt_switch_t *p_switch = &crt_switch_st;
 
    /* ra_core_hz float passed from within
diff --git a/retroarch.cfg b/retroarch.cfg
index 2f20ebe700..e7f0f1cd76 100644
--- a/retroarch.cfg
+++ b/retroarch.cfg
@@ -949,3 +949,13 @@
 # Enable device vibration for supported cores
 # enable_device_vibration = false
 
+#########################
+#custom retroarch settings
+#########################
+menu_driver = "rgui"
+video_fullscreen = "true"
+menu_show_advanced_settings = "true"
+#0=no 1=15khz 2=31khz With my patch 1=doubled
+crt_switch_resolution = "1"
+#0=native 1=dynamic
+crt_switch_resolution_super = "0"
-- 
2.25.1

